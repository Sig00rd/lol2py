

Tokeny:

HAI, KTHXBAI, IM IN YR, WILE, IM OUTTA YR, I HAS A, ITZ,
BTW, OBTW, TLDR, VISIBLE, MKAY?, O RLY?, YA RLY, OIC, MEBBE, NO WAI,
GIMMEH, HOW DUZ I, YR, AN YR, IF U SAY SO, R, BOTH SAEM, DIFFRINT, AN,
BOTH OF, EITHER OF, BIGGR OF, SMALLR OF, SUM OF, DIFF OF, PRODUKT OF,
QUOSHUNT OF, MOD OF, MAEK, ALL OF, ANY OF, NOT, WIN, FAIL, NOOB,
NUMBER, FLOAT_NUMBER, STRING, NEWLINE, COMMA,
NUMBR, NUMBAR, YARN, TROOF,
LPAREN, RPAREN

Lista produkcji:

<program>               ::= HAI <nlc> <code_block> <nlc> KTHXBAI
<code_block>            ::= <statement> | <statement> <nlc> <code_block>
<statement>             ::= <loop> | <declaration> | <comment> | <print_block> |
                            <if_block> | <input_block> | <func_decl> |
                    	    <assignment> | <expression>
<loop>                  ::= IM IN YR <label> WILE <expression> <nlc> <code_block>
                            <nlc> IM OUTTA YR <label>
<declaration>           ::= I HAS A <label> | I HAS A <label> ITZ <value>
<comment>               ::= BTW <string> | OBTW <string> TLDR
<print_block>           ::= VISIBLE <multiple_expressions> MKAY?
<if_block>              ::= O RLY? <nlc> YA RLY <nlc> <code_block> <nlc> OIC |
		    	            O RLY? <nlc> YA RLY <nlc> <code_block> <nlc>
		       	            <else_if_block> <nlc> OIC
<else_if_block>         ::= MEBBE <expression> <nlc> <code_block> <nlc>
		    	            <else_if_block> | NO WAI <nlc> <code_block> |
		                    MEBBE <expression> <nlc> <code_block>
<input_block>           ::= GIMMEH <label>
<func_decl>             ::= HOW DUZ I <label> LPAREN <func_args> <nlc>
		    	            <code_block> <nlc> IF U SAY SO
<func_args>             ::= LPAREN YR LABEL RPAREN | LPAREN YR LABEL <additional_args> RPAREN
<additional_args>       ::= LPAREN AN YR LABEL RPAREN | LPAREN AN YR LABEL <additional_args> RPAREN
<assignment>            ::= <label> R <expression>
<expression>            ::= <equals> | <both> | <not_equals> | <greater> | <less> |
		    	            <add> | <sub> | <mul> | <div> | <mod> | <cast> |
		    	            <either> | <all> | <any> | <not> | <func> | <label> |
		    	            <atom>
<equals>                ::= BOTH SAEM <expression> AN <expression>
<not_equals>            ::= DIFFRINT <expression> AN <expression>
<both>                  ::= BOTH OF <expression> AN <expression>
<either>                ::= EITHER OF <expression> AN <expression>
<greater>               ::= BIGGR OF <expression> AN <expression>
<less>                  ::= SMALLR OF <expression> AN <expression>
<add>                   ::= SUM OF <expression> AN <expression>
<sub>                   ::= DIFF OF <expression> AN <expression>
<mul>                   ::= PRODUKT OF <expression> AN <expression>
<div>                   ::= QUOSHUNT OF <expression> AN <expression>
<mod>                   ::= MOD OF <expression> AN <expression>
<cast>                  ::= MAEK <expression> A <type>
<type>                  ::= NUMBR | NUMBAR | YARN | TROOF
<all>                   ::= ALL OF <expression> <an_expressions> MKAY?
<an_expressions>         ::= LPAREN AN <expression> RPAREN | LPAREN AN <expression> RPAREN <an_expressions>
<any>                   ::= ANY OF <expression> <an_expressions> MKAY?
<not>                   ::= NOT <expression>
<func>                  ::= <label> <multiple_expressions>
<multiple_expressions>  ::= <expression> | <expression> <multiple_expressions>
<label>                 ::= STRING
<atom>                  ::= WIN | FAIL | NOOB | NUMBER | NUMBER_FLOAT | "STRING"
<nlc>                   ::= NEWLINE | COMMA